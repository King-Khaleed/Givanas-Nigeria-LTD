'use client';

import PageHeader from "@/components/shared/page-header";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { format } from "date-fns";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import { supabase } from "@/lib/supabaseClient";
import { useEffect, useState } from "react";
import { Loader2 } from "lucide-react";

async function getAllReports() {
  const { data, error } = await supabase
    .from("audit_reports")
    .select(`
      id,
      title,
      created_at,
      organization:organizations ( name ),
      author:profiles ( full_name )
    `)
    .order('created_at', { ascending: false });

  if (error) {
    console.error("Error fetching reports:", error.message);
    return [];
  }

  return data;
}


export default function AdminReportsPage() {
  const [reports, setReports] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    getAllReports().then(data => {
        setReports(data);
        setLoading(false);
    });
  }, []);

  if (loading) {
    return <div className="flex justify-center items-center h-96"><Loader2 className="w-8 h-8 animate-spin" /></div>;
  }

  return (
    <div>
      <PageHeader title="Platform Reports" description="View all audit reports generated across the platform." />
      <Card>
        <CardHeader>
            <CardTitle>All Generated Reports</CardTitle>
            <CardDescription>A log of every report created by users.</CardDescription>
        </CardHeader>
        <CardContent>
            <Table>
                <TableHeader>
                    <TableRow>
                        <TableHead>Report Title</TableHead>
                        <TableHead>Organization</TableHead>
                        <TableHead>Generated By</TableHead>
                        <TableHead>Date</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    {reports.map((report: any) => (
                        <TableRow key={report.id}>
                            <TableCell className="font-medium">{report.title}</TableCell>
                            <TableCell>{report.organization?.name ?? 'N/A'}</TableCell>
                            <TableCell>{report.author?.full_name ?? 'N/A'}</TableCell>
                            <TableCell>{format(new Date(report.created_at), 'PPP')}</TableCell>
                            <TableCell className="text-right">
                                <Button variant="outline" size="sm" asChild>
                                    <Link href="#">Download</Link>
                                </Button>
                            </TableCell>
                        </TableRow>
                    ))}
                    {reports.length === 0 && (
                         <TableRow>
                            <TableCell colSpan={5} className="text-center h-24">
                                No reports have been generated yet.
                            </TableCell>
                        </TableRow>
                    )}
                </TableBody>
            </Table>
        </CardContent>
      </Card>
    </div>
  );
}
